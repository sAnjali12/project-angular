{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth-guard.service.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/user/login/login.component.ts","webpack:///src/app/user/login/login.component.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","routes","path","component","canActivate","redirectTo","pathMatch","AppModule","forRoot","declarations","imports","providers","bootstrap","AuthGuardService","auth","router","next","state","localStorage","getItem","navigateByUrl","AuthService","http","userLogin","body","emailOrPhone","deviceId","devType","loginType","password","latitude","longitude","headers","set","post","pipe","response","saveToken","data","token","setItem","HomeComponent","LoginComponent","fb","route","errors","notifyMessage","initForm","params","subscribe","loginForm","group","required","fieldName","controls","invalid","dirty","touched","console","log","value","login","navigate","errorResponse","error","UserComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'login';\n}\n","<!-- <div class=\"container\">\n  <app-login></app-login>\n</div> -->\n<!-- <nav class=\"navbar navbar-expand-lg navbar-light bg-dark rounded\">\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse justify-content-md-center\" id=\"navbar1\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/\">Home page</a>\n      </li>\n      <h1>If you want to go home page, so you need to login</h1>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/login\">Login</a>\n      </li>\n    </ul>\n  </div>\n</nav> -->\n\n\n<router-outlet></router-outlet> ","import { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule } from '@angular/forms'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router'\nimport \"@angular/compiler\"\n\n\n\nimport { AppComponent } from './app.component'\nimport { LoginComponent } from './user/login/login.component'\nimport { HomeComponent } from './home/home.component'\nimport { AuthService } from './auth.service';\nimport { UserComponent } from './user/user.component'\nimport { AuthGuardService } from './auth-guard.service'\n\nconst routes: Routes = [\n  {path: 'home',component: HomeComponent,canActivate: [AuthGuardService]},\n  { path: 'login', component: LoginComponent },\n  { path: '', redirectTo: '/login', pathMatch: 'full'  }\n\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    UserComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [AuthService,\n    AuthGuardService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { RouterStateSnapshot, CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { strict } from 'assert';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {}\n  canActivate(\n    next:ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n        if(localStorage.getItem('app_auth') !=null)        \n            return true;\n        this.router.navigateByUrl('/login')\n        return false\n    }\n   \n}\n","import { Injectable } from '@angular/core';\nimport { Observable,} from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {map} from 'rxjs/operators';\n\nexport interface Logindata {\n    emailOrPhone: string\n    password: string\n}\n\n@Injectable()\n\nexport class AuthService {\n    \n   \n    constructor(private http: HttpClient) {}\n\n    public login(userLogin: Logindata): Observable<any> {\n        let body = {\n            emailOrPhone: userLogin.emailOrPhone,\n            deviceId: \"12345\",\n            devType: 3,\n            loginType: 1,\n            password: userLogin.password,\n            latitude: \"13.0002607\",\n            longitude: \"77.45730089999999\"\n        }                                                                                                                                                       \n\n        let headers = new HttpHeaders()\n            .set(\"Content-Type\", \"application/json\")\n            .set(\"lan\", \"en\");\n        return this.http.post('https://dev-api.service-genie.xyz/customer/signIn', body, { headers: headers }).pipe(map(\n            (response:any) => {\n                return this.saveToken(response.data.token);  \n            \n        }));\n\n\n    }\n\n    private saveToken(token: string): string {\n        localStorage.setItem('app_auth',token)\n        return token\n}\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav>\n    <div class=\"nav-wrapper\">\n      <a href=\"#\" class=\"brand-logo center\">\n        <i class=\"material-icons\"> ABOUT ME..</i></a>\n      <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\n        <li>\n            <a>LOGOUT</a>\n        </li>\n      </ul>\n    </div>\n    <div class=\"card-panel\">\n        <span class=\"blue-text text-darken-2\">Hello All, I am Anjali. I am self learner and curntaly I am working on angular</span>\n    </div>\n  </nav>\n        \n<!-- Hello All, I am Anjali. I am self learner and curntaly I am working on angular -->\n<!-- <!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>WELCOME</title>\n</head>\n\n<body>\n    <div class=\"heade\">\n        <h1> ABOUT ME..\n        </h1>\n       <h4>\n            Hello All, I am Anjali. I am self learner and curntaly I am working on angular.\n       </h4>\n   </div>\n</body>\n\n</html>\n\n -->\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder,FormGroup,Validators} from '@angular/forms';\nimport {AuthService} from '../../auth.service';\nimport  {Router,ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  errors:any[]=[];\n  notifyMessage:string='';\n\n  constructor(private fb:FormBuilder,\n              private auth:AuthService,\n              private router:Router,\n              private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.initForm();\n    this.route.params.subscribe((params)=>{\n      if(params['registered']==='success'){\n        this.notifyMessage=\"You have been successfuly registerd, you can login now!\"\n      }\n\n    })\n  }\n\n  initForm(){\n    this.loginForm = this.fb.group({\n      emailOrPhone: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  isInValidForm(fieldName):boolean{\n    return this.loginForm.controls[fieldName].invalid && \n    (this.loginForm.controls[fieldName].dirty || this.loginForm.controls[fieldName].touched)\n\n  }\n\n  isRequired(fieldName):boolean{\n    return this.loginForm.controls[fieldName].errors.required\n\n  }\n\n  login(){\n    console.log(this.loginForm.value)\n    this.auth.login(this.loginForm.value).subscribe(\n      (token)=>{\n        this.router.navigate(['/home']);\n      },(errorResponse)=>{\n        this.errors=(errorResponse.error.errors);\n\n\n      }\n    )\n  }\n\n}\n","<section id=\"login\">\n  <div class=\"bwm-form\">\n    <div class=\"row\">\n      <div class=\"col-md-5\">\n        <h1 class=\"page-title\">Login</h1>\n        <form  [formGroup]=\"loginForm\">\n          <div class=\"form-group\">\n            <label for=\"emailOrPhone\"><b>emailOrPhone</b></label>\n            <input type=\"text\" \n              placeholder=\"Enter emailOrPhone\" \n              name=\"emailOrPhone\" \n              required\n              formControlName=\"emailOrPhone\">\n            \n            <div *ngIf=\"isInValidForm('emailOrPhone')\"\n              class=\"alert alert-danger\">\n\n              <div *ngIf=\"isRequired('emailOrPhone')\">\n                emailOrPhone is required.\n              </div>\n              <div *ngIf=\"loginForm.controls['emailOrPhone'].errors.pattern\">\n                Must be valid emailOrPhone format!\n              </div>\n            </div>\n            </div>\n          \n            <div class=\"form-group\">\n              <label for=\"password\"><b>password</b></label>\n              <input type=\"password\" \n                placeholder=\"Enter password\" \n                name=\"password\" \n                required\n                formControlName=\"password\">\n          </div>\n          <button [disabled]=\"!loginForm.valid\" type=\"submit\" class=\"btn btn-bwm\" (click)=\"login()\">Submit</button>\n        </form>\n    \n      </div>\n    </div>\n  </div>\n</section>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n    </div>\n    <div class=\"card-tabs\">\n      <ul class=\"tabs tabs-fixed-width tabs-transparent\">\n        <li class=\"tab\"><a routerLink=\"/login\" routerLinkActive=\"active\">Login</a></li>\n      </ul>\n    </div>\n    <div class=\"card-content white\">\n      <div class=\"row\">\n        <router-outlet></router-outlet> \n      </div>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}