{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth-guard.service.ts","./src/app/auth.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'login';\n}\n","<!-- <div class=\"container\">\n  <app-login></app-login>\n</div> -->\n<!-- <nav class=\"navbar navbar-expand-lg navbar-light bg-dark rounded\">\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse justify-content-md-center\" id=\"navbar1\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/\">Home page</a>\n      </li>\n      <h1>If you want to go home page, so you need to login</h1>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/login\">Login</a>\n      </li>\n    </ul>\n  </div>\n</nav> -->\n\n\n<router-outlet></router-outlet> ","import { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule } from '@angular/forms'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router'\nimport \"@angular/compiler\"\n\n\n\nimport { AppComponent } from './app.component'\nimport { LoginComponent } from './user/login/login.component'\nimport { HomeComponent } from './home/home.component'\nimport { AuthService } from './auth.service';\nimport { UserComponent } from './user/user.component'\nimport { AuthGuardService } from './auth-guard.service'\n\nconst routes: Routes = [\n  {path: 'home',component: HomeComponent,canActivate: [AuthGuardService]},\n  { path: 'login', component: LoginComponent },\n  { path: '', redirectTo: '/login', pathMatch: 'full'  }\n\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    UserComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [AuthService,\n    AuthGuardService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { RouterStateSnapshot, CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { strict } from 'assert';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {}\n  canActivate(\n    next:ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n        if(localStorage.getItem('app_auth') !=null)        \n            return true;\n        this.router.navigateByUrl('/login')\n        return false\n    }\n   \n}\n","import { Injectable } from '@angular/core';\nimport { Observable,} from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {map} from 'rxjs/operators';\n\nexport interface Logindata {\n    emailOrPhone: string\n    password: string\n}\n\n@Injectable()\n\nexport class AuthService {\n    \n   \n    constructor(private http: HttpClient) {}\n\n    public login(userLogin: Logindata): Observable<any> {\n        let body = {\n            emailOrPhone: userLogin.emailOrPhone,\n            deviceId: \"12345\",\n            devType: 3,\n            loginType: 1,\n            password: userLogin.password,\n            latitude: \"13.0002607\",\n            longitude: \"77.45730089999999\"\n        }                                                                                                                                                       \n\n        let headers = new HttpHeaders()\n            .set(\"Content-Type\", \"application/json\")\n            .set(\"lan\", \"en\");\n        return this.http.post('https://dev-api.service-genie.xyz/customer/signIn', body, { headers: headers }).pipe(map(\n            (response:any) => {\n                return this.saveToken(response.data.token);  \n            \n        }));\n\n\n    }\n\n    private saveToken(token: string): string {\n        localStorage.setItem('app_auth',token)\n        return token\n}\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav>\n    <div class=\"nav-wrapper\">\n      <a href=\"#\" class=\"brand-logo center\">\n        <i class=\"material-icons\"> ABOUT ME..</i></a>\n      <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\n        <li>\n            <a>LOGOUT</a>\n        </li>\n      </ul>\n    </div>\n    <div class=\"card-panel\">\n        <span class=\"blue-text text-darken-2\">Hello All, I am Anjali. I am self learner and curntaly I am working on angular</span>\n    </div>\n  </nav>\n        \n<!-- Hello All, I am Anjali. I am self learner and curntaly I am working on angular -->\n<!-- <!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>WELCOME</title>\n</head>\n\n<body>\n    <div class=\"heade\">\n        <h1> ABOUT ME..\n        </h1>\n       <h4>\n            Hello All, I am Anjali. I am self learner and curntaly I am working on angular.\n       </h4>\n   </div>\n</body>\n\n</html>\n\n -->\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder,FormGroup,Validators} from '@angular/forms';\nimport {AuthService} from '../../auth.service';\nimport  {Router,ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  errors:any[]=[];\n  notifyMessage:string='';\n\n  constructor(private fb:FormBuilder,\n              private auth:AuthService,\n              private router:Router,\n              private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.initForm();\n    this.route.params.subscribe((params)=>{\n      if(params['registered']==='success'){\n        this.notifyMessage=\"You have been successfuly registerd, you can login now!\"\n      }\n\n    })\n  }\n\n  initForm(){\n    this.loginForm = this.fb.group({\n      emailOrPhone: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  isInValidForm(fieldName):boolean{\n    return this.loginForm.controls[fieldName].invalid && \n    (this.loginForm.controls[fieldName].dirty || this.loginForm.controls[fieldName].touched)\n\n  }\n\n  isRequired(fieldName):boolean{\n    return this.loginForm.controls[fieldName].errors.required\n\n  }\n\n  login(){\n    console.log(this.loginForm.value)\n    this.auth.login(this.loginForm.value).subscribe(\n      (token)=>{\n        this.router.navigate(['/home']);\n      },(errorResponse)=>{\n        this.errors=(errorResponse.error.errors);\n\n\n      }\n    )\n  }\n\n}\n","<section id=\"login\">\n  <div class=\"bwm-form\">\n    <div class=\"row\">\n      <div class=\"col-md-5\">\n        <h1 class=\"page-title\">Login</h1>\n        <form  [formGroup]=\"loginForm\">\n          <div class=\"form-group\">\n            <label for=\"emailOrPhone\"><b>emailOrPhone</b></label>\n            <input type=\"text\" \n              placeholder=\"Enter emailOrPhone\" \n              name=\"emailOrPhone\" \n              required\n              formControlName=\"emailOrPhone\">\n            \n            <div *ngIf=\"isInValidForm('emailOrPhone')\"\n              class=\"alert alert-danger\">\n\n              <div *ngIf=\"isRequired('emailOrPhone')\">\n                emailOrPhone is required.\n              </div>\n              <div *ngIf=\"loginForm.controls['emailOrPhone'].errors.pattern\">\n                Must be valid emailOrPhone format!\n              </div>\n            </div>\n            </div>\n          \n            <div class=\"form-group\">\n              <label for=\"password\"><b>password</b></label>\n              <input type=\"password\" \n                placeholder=\"Enter password\" \n                name=\"password\" \n                required\n                formControlName=\"password\">\n          </div>\n          <button [disabled]=\"!loginForm.valid\" type=\"submit\" class=\"btn btn-bwm\" (click)=\"login()\">Submit</button>\n        </form>\n    \n      </div>\n    </div>\n  </div>\n</section>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n    </div>\n    <div class=\"card-tabs\">\n      <ul class=\"tabs tabs-fixed-width tabs-transparent\">\n        <li class=\"tab\"><a routerLink=\"/login\" routerLinkActive=\"active\">Login</a></li>\n      </ul>\n    </div>\n    <div class=\"card-content white\">\n      <div class=\"row\">\n        <router-outlet></router-outlet> \n      </div>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}